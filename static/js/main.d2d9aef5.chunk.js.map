{"version":3,"sources":["serviceWorker.js","screens/dynamic/DynamicScreen.js","screens/market/MarketScreen.js","screens/policy/PolicyScreen.js","screens/trade/TradeScreen.js","screens/user/UserScreen.js","screens/login/LoginScreen.js","router/TabBar.js","router/index.js","index.js"],"names":["config","DynamicScreen","this","props","history","push","pathname","_this","react_default","a","createElement","style","flex","backgroundColor","onClick","jump","React","PureComponent","MarketScreen","PolicyScreen","TradeScreen","UserScreen","LoginScreen","state","className","withRouter","_React$PureComponent","TabBar","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","replace","console","log","position","bottom","width","height","boxShadow","display","alignItems","justifyContent","fontSize","HomeScreen","react_router","path","component","router_TabBar","App","react_router_dom","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","Promise","all","resolve","reject","permissionResult","Notification","requestPermission","result","Error","body","actions","action","title","tag","renotify","catch","error","ReactDOM","render","router","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d2d9aef5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if ((process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) || true) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n    window.addEventListener('load', () => {\n      const swUrl = `./service-worker.js`;\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  console.log(swUrl,'swUrl')\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n      // index.js\n      function askPermission() {\n        return new Promise(function (resolve, reject) {\n          var permissionResult = Notification.requestPermission(function (result) {\n            resolve(result);\n          });\n\n          if (permissionResult) {\n            permissionResult.then(resolve, reject);\n          }\n        }).then(function (permissionResult) {\n          if (permissionResult !== 'granted') {\n            throw new Error('We weren\\'t granted permission.');\n          }\n        });\n      }\n      Promise.all([\n        registration,\n        askPermission()\n      ]).then(function (result) {\n        var registration = result[0];\n        /* ===== 添加提醒功能 ====== */\n        var title = '推送标题';\n        var options = {\n          body: '邀请你一起学习',\n          actions: [{\n            action: 'show-book',\n            title: '去看看'\n          }, {\n            action: 'contact-me',\n            title: '联系我'\n          }],\n          tag: 'pwa-starter',\n          renotify: true\n        };\n        var notification = new Notification(title, options);\n        // registration.showNotification(title, options);\n        /* ======================= */\n      })\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nexport default class DynamicScreen extends React.PureComponent {\n  jump(){\n    this.props.history.push({ pathname : '/login'})\n  }\n\n  render() {\n    return (\n      <div style={{flex: 1,backgroundColor:'yellow'}} onClick={() => this.jump()}>DynamicScreen</div>\n    )\n  }\n}\n","import React from 'react';\n\nexport default class MarketScreen extends React.PureComponent {\n  render() {\n    return (\n      <div style={{flex:1}}>MarketScreen</div>\n    )\n  }\n}\n","import React from 'react';\n\nexport default class PolicyScreen extends React.PureComponent {\n  render() {\n    return (\n      <div style={{flex:1}}>PolicyScreen</div>\n    )\n  }\n}\n","import React from 'react';\n\nexport default class TradeScreen extends React.PureComponent {\n  render() {\n    return (\n      <div style={{flex:1}}>TradeScreen</div>\n    )\n  }\n}\n","import React from 'react';\n\nexport default class UserScreen extends React.PureComponent {\n  render() {\n    return (\n      <div style={{flex:1}}>UserScreen</div>\n    )\n  }\n}\n","import React from 'react';\n\nexport default class LoginScreen extends React.PureComponent {\n  state = {\n    className:'fade'\n  }\n\n  render() {\n    return (\n      <div style={{flex: 1,backgroundColor:'red'}} >LoginScreen</div>\n    )\n  }\n}\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nexport default withRouter(class TabBar extends React.PureComponent {\n\n  push(pathname){\n    this.props.history.replace({ pathname : pathname})\n  }\n\n  render() {\n    console.log(this.props.history)\n    return (\n      <div style={{\n        position:'absolute',\n        bottom:0,\n        width:'100%',\n        height: '49px',\n        boxShadow: '0 -0.266667vw 0.533333vw rgba(0,0,0,.1)',\n        display: 'flex'\n      }}>\n        <div style={{display: 'flex', flex: 1, alignItems: 'center', justifyContent: 'center'}}\n             onClick={()=>this.push('/home/dynamic')}\n        >\n          <span style={{fontSize:'14px'}}>动态</span>\n        </div>\n        <div style={{display: 'flex', flex: 1, alignItems: 'center', justifyContent: 'center'}}\n             onClick={()=>this.push('/home/market')}\n        >\n          <span style={{fontSize:'14px'}}>行情</span>\n        </div>\n        <div style={{display: 'flex', flex: 1, alignItems: 'center', justifyContent: 'center'}}\n             onClick={()=>this.push('/home/policy')}\n        >\n          <span style={{fontSize:'14px'}}>预测</span>\n        </div>\n        <div style={{display: 'flex', flex: 1, alignItems: 'center', justifyContent: 'center'}}\n             onClick={()=>this.push('/home/trade')}\n        >\n          <span style={{fontSize:'14px'}}>交易</span>\n        </div>\n        <div style={{display: 'flex', flex: 1, alignItems: 'center', justifyContent: 'center'}}\n             onClick={()=>this.push('/home/user')}\n        >\n          <span style={{fontSize:'14px'}}>我的</span>\n        </div>\n      </div>\n    )\n  }\n})","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport '../style/index.css';\nimport {\n  DynamicScreen,\n  MarketScreen,\n  PolicyScreen,\n  TradeScreen,\n  UserScreen,\n  LoginScreen,\n} from '../screens/index';\nimport TabBar from './TabBar';\n\nclass HomeScreen extends React.PureComponent {\n  render() {\n    return (\n      <div style={{display: 'flex', flex: 1}}>\n        <Switch>\n          <Route path=\"/home/dynamic\" component={DynamicScreen}/>\n          <Route path='/home/market' component={MarketScreen}/>\n          <Route path='/home/policy' component={PolicyScreen}/>\n          <Route path='/home/trade' component={TradeScreen}/>\n          <Route path='/home/user' component={UserScreen}/>\n        </Switch>\n        <TabBar/>\n      </div>\n    );\n  }\n}\n\nclass App extends React.PureComponent {\n  render() {\n    console.log(this.props)\n    return (\n      <BrowserRouter>\n        <Route path='/home' component={HomeScreen}/>\n        <Route path=\"/login\" component={LoginScreen}/>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}